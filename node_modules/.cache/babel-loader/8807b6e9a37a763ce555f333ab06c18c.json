{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\NodeProjects\\\\TestMiniApp\\\\src\\\\components\\\\ViewTabs.js\";\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nlet tabs;\nexport class ViewTabs extends PureComponent {\n  componentDidMount() {\n    tabs = React.Children.map(this.props.children, (child, i) => {\n      return i === 0 ? React.createElement(Tappable, {\n        className: 'tappable_top',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 10\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 11\n        },\n        __self: this\n      }, child, i !== this.props.children.length - 1 && (scheme === 'space_gray' ? React.createElement(Separator, {\n        style: {\n          backgroundColor: '#626364'\n        },\n        wide: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 11\n        },\n        __self: this\n      }) : React.createElement(Separator, {\n        wide: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 11\n        },\n        __self: this\n      })))) : i === this.props.children.length - 1 ? React.createElement(Tappable, {\n        className: 'tappable_bottom',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15\n        },\n        __self: this\n      }, child, i !== this.props.children.length - 1 && (scheme === 'space_gray' ? React.createElement(Separator, {\n        style: {\n          backgroundColor: '#626364'\n        },\n        wide: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15\n        },\n        __self: this\n      }) : React.createElement(Separator, {\n        wide: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15\n        },\n        __self: this\n      })))) : React.createElement(Tappable, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      }, child, i !== this.props.children.length - 1 && (scheme === 'space_gray' ? React.createElement(Separator, {\n        style: {\n          backgroundColor: '#626364'\n        },\n        wide: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      }) : React.createElement(Separator, {\n        wide: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      }))));\n    });\n  }\n\n  render() {\n    return this.props.children.find(x => x.id === this.props.activeTab);\n  }\n\n}\nViewTabs.defaultProps = {\n  activeTab: ''\n};\nViewTabs.propTypes = {\n  activeTab: PropTypes.string\n};\nexport default ViewTabs;","map":{"version":3,"sources":["C:/Users/Admin/NodeProjects/TestMiniApp/src/components/ViewTabs.js"],"names":["React","PureComponent","PropTypes","tabs","ViewTabs","componentDidMount","Children","map","props","children","child","i","length","scheme","backgroundColor","render","find","x","id","activeTab","defaultProps","propTypes","string"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,aAAhB,QAAqC,OAArC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,IAAIC,IAAJ;AACA,OAAO,MAAMC,QAAN,SAAuBH,aAAvB,CAAqC;AAExCI,EAAAA,iBAAiB,GAAG;AAChBF,IAAAA,IAAI,GAAGH,KAAK,CAACM,QAAN,CAAeC,GAAf,CAAmB,KAAKC,KAAL,CAAWC,QAA9B,EAAwC,CAACC,KAAD,EAAQC,CAAR,KAAc;AACzD,aAAOA,CAAC,KAAK,CAAN,GACH,oBAAC,QAAD;AAAU,QAAA,SAAS,EAAE,cAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAMD,KAAN,EAAaC,CAAC,KAAM,KAAKH,KAAL,CAAWC,QAAX,CAAoBG,MAApB,GAA2B,CAAlC,KAA0CC,MAAM,KAAK,YAAX,GAA0B,oBAAC,SAAD;AAAW,QAAA,KAAK,EAAE;AAAEC,UAAAA,eAAe,EAAE;AAAnB,SAAlB;AAAkD,QAAA,IAAI,MAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAA1B,GAAsF,oBAAC,SAAD;AAAW,QAAA,IAAI,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAhI,CAAb,CADJ,CADG,GAIAH,CAAC,KAAM,KAAKH,KAAL,CAAWC,QAAX,CAAoBG,MAApB,GAA2B,CAAlC,GACC,oBAAC,QAAD;AAAU,QAAA,SAAS,EAAE,iBAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAMF,KAAN,EAAaC,CAAC,KAAM,KAAKH,KAAL,CAAWC,QAAX,CAAoBG,MAApB,GAA2B,CAAlC,KAA0CC,MAAM,KAAK,YAAX,GAA0B,oBAAC,SAAD;AAAW,QAAA,KAAK,EAAE;AAAEC,UAAAA,eAAe,EAAE;AAAnB,SAAlB;AAAkD,QAAA,IAAI,MAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAA1B,GAAsF,oBAAC,SAAD;AAAW,QAAA,IAAI,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAhI,CAAb,CADJ,CADD,GAIG,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAMJ,KAAN,EAAaC,CAAC,KAAM,KAAKH,KAAL,CAAWC,QAAX,CAAoBG,MAApB,GAA2B,CAAlC,KAA0CC,MAAM,KAAK,YAAX,GAA0B,oBAAC,SAAD;AAAW,QAAA,KAAK,EAAE;AAAEC,UAAAA,eAAe,EAAE;AAAnB,SAAlB;AAAkD,QAAA,IAAI,MAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAA1B,GAAsF,oBAAC,SAAD;AAAW,QAAA,IAAI,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAhI,CAAb,CADF,CARV;AAWH,KAZM,CAAP;AAaH;;AAEDC,EAAAA,MAAM,GAAG;AACL,WACI,KAAKP,KAAL,CAAWC,QAAX,CAAoBO,IAApB,CAAyBC,CAAC,IAAIA,CAAC,CAACC,EAAF,KAAS,KAAKV,KAAL,CAAWW,SAAlD,CADJ;AAGH;;AAtBuC;AAyB5Cf,QAAQ,CAACgB,YAAT,GAAwB;AACpBD,EAAAA,SAAS,EAAE;AADS,CAAxB;AAIAf,QAAQ,CAACiB,SAAT,GAAqB;AACjBF,EAAAA,SAAS,EAAEjB,SAAS,CAACoB;AADJ,CAArB;AAIA,eAAelB,QAAf","sourcesContent":["import React, { PureComponent } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nlet tabs;\r\nexport class ViewTabs extends PureComponent {\r\n\r\n    componentDidMount() {\r\n        tabs = React.Children.map(this.props.children, (child, i) => {\r\n            return i === 0 ?\r\n                <Tappable className={'tappable_top'} >\r\n                    <div>{child}{i !== (this.props.children.length-1) && ( scheme === 'space_gray' ? <Separator style={{ backgroundColor: '#626364' }} wide /> : <Separator wide /> )}</div>\r\n                </Tappable>\r\n                : (i === (this.props.children.length-1) ?\r\n                    <Tappable className={'tappable_bottom'} >\r\n                        <div>{child}{i !== (this.props.children.length-1) && ( scheme === 'space_gray' ? <Separator style={{ backgroundColor: '#626364' }} wide /> : <Separator wide /> )}</div>\r\n                    </Tappable>\r\n                    : <Tappable>\r\n                        <div>{child}{i !== (this.props.children.length-1) && ( scheme === 'space_gray' ? <Separator style={{ backgroundColor: '#626364' }} wide /> : <Separator wide /> )}</div>\r\n                    </Tappable>);\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            this.props.children.find(x => x.id === this.props.activeTab)\r\n        )\r\n    }\r\n}\r\n\r\nViewTabs.defaultProps = {\r\n    activeTab: '',\r\n};\r\n\r\nViewTabs.propTypes = {\r\n    activeTab: PropTypes.string,\r\n};\r\n\r\nexport default ViewTabs;"]},"metadata":{},"sourceType":"module"}