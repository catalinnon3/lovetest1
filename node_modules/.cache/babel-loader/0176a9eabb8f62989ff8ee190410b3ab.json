{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\NodeProjects\\\\LoveTest\\\\src\\\\LoveTest.js\";\nimport React from 'react';\nimport bridge from '@vkontakte/vk-bridge';\nimport '@vkontakte/vkui/dist/vkui.css';\nimport './css/LoveTest.css';\nimport html2canvas from 'html2canvas';\nimport { Panel, View, Placeholder, Button, Gallery, Title, FixedLayout, Div, Snackbar, ScreenSpinner } from '@vkontakte/vkui';\nimport Icon28StoryOutline from '@vkontakte/icons/dist/28/story_outline';\nimport Lottie from 'react-lottie';\nimport animDataHello from './animations/hello.json';\nimport animDataLove from './animations/love.json';\nimport animDataBrokenHeart from './animations/broken_heart.json';\nimport animDataHeart from './animations/heart.json';\nimport bgLight from './img/bg-light.jpg';\nimport bgDark from './img/bg-dark.jpg';\nimport downwards_black_arrow from './img/downwards-black-arrow.png';\nimport w1 from './img/w1.jpg';\nimport w2 from './img/w2.jpg';\nimport w3 from './img/w3.jpg';\nimport m1 from './img/m1.jpg';\nimport m2 from './img/m2.jpg';\nimport m3 from './img/m3.jpg';\n\nconst random = require('random');\n\nlet app_id = 7561605,\n    group_id = 197766832,\n    prefix = '_____';\n\nclass LoveTest extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.back = () => {\n      if (this.state.popout !== null) {\n        this.setState({\n          popout: null\n        });\n        window.history.pushState({\n          pop: 'popout'\n        }, 'Title');\n        return;\n      }\n\n      let _this$state = this.state,\n          activePanel = _this$state.activePanel,\n          history = _this$state.history;\n\n      if (history.length === 1) {\n        bridge.send('VKWebAppClose', {\n          status: 'success'\n        });\n      } else if (history.length > 1) {\n        history.pop();\n        activePanel = history[history.length - 1];\n        this.setState({\n          activePanel,\n          history\n        });\n      }\n    };\n\n    this.state = {\n      popout: null,\n      history: ['main'],\n      activePanel: 'main',\n      data: {}\n    };\n    this.componentDidMount = this.componentDidMount.bind(this);\n    this.back = this.back.bind(this);\n    this.go = this.go.bind(this);\n    this.updateTime = this.updateTime.bind(this);\n    let array = ('Мой парень будет вежливый и милый. Он будет обожать спорт, его тело будет восхищать. Тёмные волосы и голубые глаза сведут меня с ума. Рост 191\\n' + 'Мой парень будет бизнесменом. Предприимчивый, сильный, но честный, он будет уникальной личностью. У него будет милая улыбка и красивые глаза.\\n' + 'Мой парень будет статный и красивый. Внешность модели, характер полководца. За ним всегда чувствую себя в безопасности. Рост 187\\n' + 'Мой парень будет очень успешен и силен. Его карие глаза будут полны мудрости и доброты. Его рост будет 178, хобби - велоспорт.\\n' + 'Мой парень будет стройными и высоким. Я сразу полюблю его ласковый и надёжный характер. Он обожает делать сюрпризы. Рост 176\\n' + 'Мой парень будет ревнивым и улыбчивым. Он очень будет дорожить мной. У него будет восхитительный голос и красивое тело. Рост 191\\n' + 'Мой парень будет очень хорошо танцевать. У него будут светлые волосы и голубые глаза. Его хобби - рисование.\\n' + 'Мой парень будет высоким и милым. Его звонкий смех будет заразительным, а глаза цвета морской волны покорят мое сердце. Он будет работать программистом в крупной компании.\\n' + 'Мой парень будет необычным. У него будет много энергии, он будет очень эмоциональным и неусидчивым. Добрый и умный, он будет ростом 182, темноволосый.\\n' + 'Мой парень будет очень миловидным. Худощавый, но жилистый, с русыми волосами и серыми глазами. Он будет очень чуткий, добрый и верный. Он будет любить собачек.\\n' + 'Мой парень будет ветеринаром. Он будет обожать кошек и вообще всех животных. Сильный, добрый, бесстрашный, темноволосый с зелеными глазами.\\n' + 'Мой парень будет успешным банковским служащим, строгим, но справедливым. Я буду без ума от его чувства юмора и бездонных зеленых глаз. У него будет рост 181 и атлетическое тело.\\n' + 'Мой парень на первый взгляд будет внешне самым обыкновенным, рост 175, спортивное телосложение. Но на деле он будет работать пожарным, волонтером в детских домах и будет любить меня бесконечно сильно.\\n' + 'Мой парень будет ярым фанатом футбола. Он будет хорош играть в региональной сборной. У него будет волшебное тело и голубые глаза. Он будет называть меня своей \"малышкой\".\\n' + 'Мой парень будет фотографом. Его волшебные фотографии будут оценены по достоинству в европейских странах. Он будет среднего телосложения с модельным лицом и глазами изумрудного цвета.\\n' + 'Мой парень будет красивым, накаченным массажистом. Его крепкие руки будут делать со мной такое, от чего я буду таять, как масло. У него будут русые волосы, умные карие глаза и бархатистый голос.\\n' + 'Мой парень будет ебать овец и говорить фразу \"ежи бля\" каждый день.\\n' + 'Мой парень будет великолепным хирургом. Он будет добрым и нежным. У него будет широкая спина, за которой я буду чувствовать себя в безопасности. У него красивые голубые глаза и рост 185.\\n' + 'Мой парень будет очень строгим, но добрым и милым одновременно. Он будет любить меня больше, чем я себе могла представить. Он будет работать фитнес инструктором. Его статная внешность и карие глаза сведут меня с ума.\\n' + 'Мой парень будет пилотом самолета. Его будут любить и уважать все вокруг. Незабываемые вечера в его крепких объятиях я не забуду никогда. У него будет волшебное чувство юмора и голубые, бездонные глаза.\\n' + 'Мой парень будет очень вспыльчивым и с сильным характером, но тем не менее от меня он будет без ума. С ним у меня будут лучшие свидания. У него будут светлые волосы и изумрудные глаза.\\n' + 'Мой парень будет учителем в школе. У него будет восхитительный смех и харизма, рост 180 и модельная внешность. Он не любит расставания, потому я всегда буду рядом.\\n' + 'Мой парень будет высоким, стройным и с зелеными глазами. Его русые волосы будут очень пышными и красивыми. Он инструктор по вождению, который любит экстрим.\\n' + 'Мой парень будет моделью. Он будет сниматься для линеек одежды и рекламных компаний. Он очень добрый и милый. Любит спать в обнимку со мной. Рост 184 и крепкое тело.').split('\\n');\n    console.log(array);\n  }\n\n  async componentDidMount() {\n    let data = await this.updateStorage();\n\n    if (data['gen' + prefix] !== false && data['phrase' + prefix] !== false) {\n      await this.randomPhrase();\n      this.go('panel5');\n    }\n\n    bridge.send('VKWebAppInit');\n    window.addEventListener('popstate', e => {\n      e.preventDefault();\n      this.back(e);\n    });\n    bridge.subscribe(async ({\n      detail: {\n        type,\n        data\n      }\n    }) => {\n      if (type !== undefined) console.log(type, data);\n\n      if (type === 'VKWebAppUpdateConfig') {\n        const schemeAttribute = document.createAttribute('scheme');\n        schemeAttribute.value = false ? data.scheme ? data.scheme : 'bright_light' : 'space_gray';\n        document.body.attributes.setNamedItem(schemeAttribute);\n      }\n    });\n  }\n\n  async updateStorage() {\n    let keys = ['gen', 'phrase', 'time'];\n    let sValues = await bridge.sendPromise('VKWebAppStorageGet', {\n      keys: (keys.join(prefix + ',') + prefix).split(',')\n    });\n    sValues = sValues.keys;\n    let data = {};\n\n    try {\n      for (let value of sValues) {\n        let nmbr = Number(value.value);\n        data[value.key] = value.value == 'true' || value.value == 'false' || value.value == '' ? value.value == 'true' : nmbr > 0 ? nmbr : value.value;\n      }\n    } catch (e) {\n      console.error('e3', e);\n    }\n\n    this.setState({\n      data,\n      sValues\n    });\n    return data;\n  }\n\n  go(panel) {\n    let _this$state2 = this.state,\n        history = _this$state2.history,\n        activePanel = _this$state2.activePanel;\n\n    if (history[history.length - 1] !== panel) {\n      history.push(panel);\n      window.history.pushState({\n        activePanel: panel\n      }, 'Title');\n      activePanel = panel;\n      this.setState({\n        activePanel,\n        history\n      });\n    }\n  }\n\n  async randomPhrase() {\n    let woman = ['Мой парень будет вежливый и милый. Он будет обожать спорт, его тело будет восхищать. Тёмные волосы и голубые глаза сведут меня с ума. Рост 191', 'Мой парень будет бизнесменом. Предприимчивый, сильный, но честный, он будет уникальной личностью. У него будет милая улыбка и красивые глаза.', 'Мой парень будет статный и красивый. Внешность модели, характер полководца. За ним всегда чувствую себя в безопасности. Рост 187', 'Мой парень будет очень успешен и силен. Его карие глаза будут полны мудрости и доброты. Его рост будет 178, хобби - велоспорт.', 'Мой парень будет стройными и высоким. Я сразу полюблю его ласковый и надёжный характер. Он обожает делать сюрпризы. Рост 176', 'Мой парень будет ревнивым и улыбчивым. Он очень будет дорожить мной. У него будет восхитительный голос и красивое тело. Рост 191', 'Мой парень будет очень хорошо танцевать. У него будут светлые волосы и голубые глаза. Его хобби - рисование.', 'Мой парень будет высоким и милым. Его звонкий смех будет заразительным, а глаза цвета морской волны покорят мое сердце. Он будет работать программистом в крупной компании.', 'Мой парень будет необычным. У него будет много энергии, он будет очень эмоциональным и неусидчивым. Добрый и умный, он будет ростом 182, темноволосый.', 'Мой парень будет очень миловидным. Худощавый, но жилистый, с русыми волосами и серыми глазами. Он будет очень чуткий, добрый и верный. Он будет любить собачек.', 'Мой парень будет ветеринаром. Он будет обожать кошек и вообще всех животных. Сильный, добрый, бесстрашный, темноволосый с зелеными глазами.', 'Мой парень будет успешным банковским служащим, строгим, но справедливым. Я буду без ума от его чувства юмора и бездонных зеленых глаз. У него будет рост 181 и атлетическое тело.', 'Мой парень на первый взгляд будет внешне самым обыкновенным, рост 175, спортивное телосложение. Но на деле он будет работать пожарным, волонтером в детских домах и будет любить меня бесконечно сильно.', 'Мой парень будет ярым фанатом футбола. Он будет хорош играть в региональной сборной. У него будет волшебное тело и голубые глаза. Он будет называть меня своей \"малышкой\".', 'Мой парень будет фотографом. Его волшебные фотографии будут оцене��ы по достоинству в европейских странах. Он будет среднего телосложения с модельным лицом и глазами изумрудного цвета.', 'Мой парень будет красивым, накаченным массажистом. Его крепкие руки будут делать со мной такое, от чего я буду таять, как масло. У него будут русые волосы, умные карие глаза и бархатистый голос.', 'Мой парень будет ебать овец и говорить фразу \"ежи бля\" каждый день.', 'Мой парень будет великолепным хирургом. Он будет добрым и нежным. У него будет широкая спина, за которой я буду чувствовать себя в безопасности. У него красивые голубые глаза и рост 185.', 'Мой парень будет очень строгим, но добрым и милым одновременно. Он будет любить меня больше, чем я себе могла представить. Он будет работать фитнес инструктором. Его статная внешность и карие глаза сведут меня с ума.', 'Мой парень будет пилотом самолета. Его будут любить и уважать все вокруг. Незабываемые вечера в его крепких объятиях я не забуду никогда. У него будет волшебное чувство юмора и голубые, бездонные глаза.', 'Мой парень будет очень вспыльчивым и с сильным характером, но тем не менее от меня он будет без ума. С ним у меня будут лучшие свидания. У него будут светлые волосы и изумрудные глаза.', 'Мой парень будет учителем в школе. У него будет восхитительный смех и харизма, рост 180 и модельная внешность. Он не любит расставания, потому я всегда буду рядом.', 'Мой парень будет высоким, стройным и с зелеными глазами. Его русые волосы будут очень пышными и красивыми. Он инструктор по вождению, который любит экстрим.', 'Мой парень будет моделью. Он будет сниматься для линеек одежды и рекламных компаний. Он очень добрый и милый. Любит спать в обнимку со мной. Рост 184 и крепкое тело.'],\n        man = ['Следующие отношения начнутся 14 сентября 2020 года. Ты будешь ожидать автобус и увидишь свою будущую девушку. После неловких взглядов вы зайдете в автобус, случайно сев рядом, познакомитесь и разговоритесь.', 'Следующие отношения начнутся 28 декабря 2020 года. Ты пойдешь в магазин под новый год, подскользнешься на наледи и упадешь. Твоя будущая половинка подбежит помочь тебе подняться. Посмеявшись и отряхнувшись, вы узнаете имена друг друга. Она будет очень милой и красивой.', 'Следующие отношения начнутся 11 мая 2021 года. Ранним утром ты отправишься по делам. Вы не первый раз столкнетесь в лифте, но сегодня твоя будущая девушка наберется храбрости и напрямую спросит: \"не хочешь ли ты погулять вечером?\". Ты ответишь \"да\".', 'Следующие отношения начнутся 28 апреля 2021 года. На протяжении нескольких месяцев вы будете сталкиваться взглядами в метро. В очередной раз ты не выдержишь и подойдешь познакомиться. \"Не может так быть, что бы мы случайно столько раз встретились\" - скажешь ты и вы договоритесь о свидании.', 'Следующие отношения начнутся 22 октября 2020 года. Ты будешь в плохом настроении в перерыве между учебой, но вдруг увидишь ее. Она будет стоять и изучать что-то на доске с информацией. Ты аккуратно подойдешь и пошутишь. Тебя заворожит ее звонкий смех. С этого дня вы начнете строить отношения.', 'Следующие отношения начнутся 18 ноября 2020 года. Ты не будешь знать как ее зовут, но она позвонит тебе и ты влюбишься в ее голос. Окажется, что она просто ошиблась номером, но ты найдешь ее в соц.сети по номеру телефона и вы начнете общаться.', 'Следующие отношения начнутся 12 февраля 2021 года. Ты не будешь ждать, что в такой пасмурный день может случиться что-то хорошее, но тут появится она. Ты столкнешься с ней около магазина и помимо своей воли увяжешься за ней. Она заметит, что ты идешь следом и повернется поздороваться. Окажется, что вы учились в параллельном классе.', 'Следующие отношения начнутся 27 сентября 2020 года. Это будет девушка из компании твоего друга. Вы познакомитесь на вечеринке. Она будет такой беззащитной и милой, что ты не сможешь не влюбиться. Через неделю вы пойдете на ваше первое свидание.', 'Следующие отношения начнутся 4 апреля 2021 года. Вы познакомитесь во время вечерней прогулки с друзьями. Встретившись с компанией девушек, твои друзья быстро найдут с ними общий язык, а ты будешь плестись сзади. Одна из девушек заметит это и присоединится к тебе. Ты узнаешь ее имя и полюбишь ее чудный голос. В этот день будет ваш первый поцелуй', 'Следующие отношения начнутся 12 февраля 2021 года. Голодный, ты зайдешь в кафе быстрого питания. Твоя будущая девушка будет стоять в соседней очереди. У нее будет волшебная фигура. Позже ты подсядешь к ней за столик и узнаешь, что она обожает бургеры и что \"у меня просто хороший обмен веществ\". Вы весело проведете время и уже через неделю начнете встречаться.', 'Следующие отношения начнутся 9 ноября 2020 года. Ты не первый месяц испытываешь симпатию к этой девушке, но все как-то не складывалось общение. В этот день вы случайно столкнетесь на светофоре. Ты проводишь ее до дома и предложишь встретиться еще раз. Она согласится и поцелует тебя в щечку.', 'Следующие отношения начнутся 3 декабря 2020 года. Она подойдет неожиданно и спросит, как пройти к какому-то дому. Ты застесняешься, но быстро посмотришь по картам в телефоне и попытаешься объяснить, как туда дойти. Видя, что она запуталась, ты решишь проводить ее. В конце пути ты возьмешь ее номер и уже на следующий день вы пойдете на свидание.', 'Следующие отношения начнутся 23 октября 2020 года. Тебя познакомит с ней твоя подруга. Окажется, что вы учились с ней в начальных классах. В этот же день будет ваш первый поцелуй.', 'Следующие отношения начнутся 29 декабря 2020 года. Под новый год случаются чудеса, ведь ты познакомишься с ней. С первого взгляда ты поймешь, что она та самая. Она будет двоюродной сестрой твоего одноклассника. Вы быстро найдете общий язык и договоритесь на свидание.', 'Следующие отношения начнутся 6 мая 2021 года. После неудачных отношений ты будешь отдыхать с друзьями, тусить и развлекаться. Ее пригласит один из твоих друзей. Странно, но она сама подойдет к тебе и познакомится. Тебя подкупит ее смелость и уже через пару дней вы начнете встречаться.', 'Следующие отношения начнутся 17 ноября 2020 года. Ты неожиданно поймешь, что тебе нравится твоя давняя знакомая. Вы всегда проводили много времени вместе, но ты не думал о ней, как о будущей девушке. Тогда ты решил пригласить ее на свидание, на что она с радостью согласилась. Через пару дней вы впервые поцелуетесь.'];\n    let numM = random.int(0, man.length - 1),\n        numW = random.int(0, woman.length - 1);\n    let r = this.state.data['gen' + prefix] === 'm' ? this.state.data['phrase' + prefix] !== false ? man[this.state.data['phrase' + prefix]] : man[numM] : this.state.data['phrase' + prefix] !== false ? woman[this.state.data['phrase' + prefix]] : woman[numW];\n\n    if (this.state.data['phrase' + prefix] === false) {\n      await bridge.sendPromise('VKWebAppStorageSet', {\n        key: 'phrase' + prefix,\n        value: this.state.data['gen' + prefix] === 'm' ? numM.toString() : numW.toString()\n      });\n    }\n\n    let timeDate = this.state.data['time' + prefix] !== false ? this.state.data['time' + prefix] : await new Date(Date.now() + this.random(6 * 365 * 24 * 60 * 60 * 1000, 12 * 365 * 24 * 60 * 60 * 1000)).getTime();\n\n    if (this.state.data['phrase' + prefix] === false) {\n      await bridge.sendPromise('VKWebAppStorageSet', {\n        key: 'time' + prefix,\n        value: timeDate.toString()\n      });\n    }\n\n    this.setState({\n      r,\n      timeDate\n    });\n    await this.updateStorage();\n    this.updateTime();\n  }\n\n  updateTime() {\n    setInterval(() => {\n      try {\n        let timeMs = this.state.timeDate - Date.now();\n        let years, days, hours, minutes, seconds;\n        let yMs = 1000 * 60 * 60 * 24 * 365,\n            dMs = yMs / 365,\n            hMs = dMs / 24,\n            minMs = hMs / 60,\n            sMs = minMs / 60;\n        years = Math.floor(timeMs / yMs);\n        timeMs -= yMs;\n        days = Math.floor(timeMs / dMs) % 365;\n        timeMs -= dMs;\n        hours = Math.floor(timeMs / hMs) % 24;\n        timeMs -= hMs;\n        minutes = Math.floor(timeMs / minMs) % 60;\n        timeMs -= minMs;\n        seconds = Math.floor(timeMs / sMs) % 60;\n        timeMs -= sMs;\n        let times = [[years, ['год', 'года', 'лет']], [days, ['день', 'дня', 'дней']], [hours, ['час', 'часа', 'часов']], [minutes, ['минута', 'минуты', 'минут']], [seconds, ['секунда', 'секунды', 'секунд']]],\n            timesText = [];\n\n        for (let i = 0; i < times.length; i++) {\n          if (times[i][0] > 0) timesText.push(times[i][0] + ' ' + this.decOfNum(times[i][0], times[i][1]));\n        }\n\n        this.setState({\n          time: timesText.join(', ')\n        });\n      } catch (e) {\n        console.error(e);\n      }\n    }, 500);\n  }\n\n  decOfNum(number, titles) {\n    let decCache = [],\n        decCases = [2, 0, 1, 1, 1, 2];\n    if (!decCache[number]) decCache[number] = number % 100 > 4 && number % 100 < 20 ? 2 : decCases[Math.min(number % 10, 5)];\n    return titles[decCache[number]];\n  }\n\n  random(min, max) {\n    return Math.floor(Math.random() * (max - min) + min);\n  }\n\n  sleep(ms) {\n    return new Promise(resolve => setTimeout(resolve, ms));\n  }\n\n  viewportToPixels(value) {\n    let parts = value.match(/([0-9\\.]+)(vh|vw)/);\n    let q = Number(parts[1]);\n    let side = window[['innerHeight', 'innerWidth'][['vh', 'vw'].indexOf(parts[2])]];\n    return side * (q / 100);\n  }\n\n  render() {\n    return React.createElement(View, {\n      activePanel: this.state.activePanel,\n      popout: this.state.popout,\n      history: this.state.history,\n      onSwipeBack: this.back,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278\n      },\n      __self: this\n    }, React.createElement(Panel, {\n      id: \"main\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279\n      },\n      __self: this\n    }, React.createElement(Placeholder, {\n      icon: React.createElement(Lottie, {\n        style: {\n          pointerEvents: 'none',\n          transform: 'translateX(20px)'\n        },\n        options: {\n          animationData: animDataHello,\n          rendererSettings: {\n            preserveAspectRatio: 'xMidYMid slice'\n          }\n        },\n        width: this.viewportToPixels('65vw'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 282\n        },\n        __self: this\n      }),\n      action: React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 290\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: async () => {\n          await bridge.sendPromise('VKWebAppStorageSet', {\n            key: 'gen' + prefix,\n            value: 'm'\n          });\n          await this.updateStorage();\n          this.go('panel2');\n        },\n        size: \"xl\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 291\n        },\n        __self: this\n      }, \"\\u041C\\u0443\\u0436\\u0441\\u043A\\u043E\\u0439\"), React.createElement(Button, {\n        onClick: async () => {\n          await bridge.sendPromise('VKWebAppStorageSet', {\n            key: 'gen' + prefix,\n            value: 'w'\n          });\n          await this.updateStorage();\n          this.go('panel2');\n        },\n        style: {\n          marginTop: '12px'\n        },\n        mode: \"secondary\",\n        size: \"xl\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 295\n        },\n        __self: this\n      }, \"\\u0416\\u0435\\u043D\\u0441\\u043A\\u0438\\u0439\")),\n      stretched: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280\n      },\n      __self: this\n    }, \"\\u041F\\u0440\\u0438\\u0432\\u0435\\u0442! \\u0414\\u0430\\u0432\\u0430\\u0439 \\u043E\\u043F\\u0440\\u0435\\u0434\\u0435\\u043B\\u0438\\u043C\\u0441\\u044F \\u0441 \\u043F\\u043E\\u043B\\u043E\\u043C:\")), React.createElement(Panel, {\n      id: \"panel2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305\n      },\n      __self: this\n    }, React.createElement(Placeholder, {\n      icon: React.createElement(Lottie, {\n        style: {\n          pointerEvents: 'none'\n        },\n        options: {\n          animationData: animDataLove,\n          rendererSettings: {\n            preserveAspectRatio: 'xMidYMid slice'\n          }\n        },\n        width: this.viewportToPixels('65vw'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 308\n        },\n        __self: this\n      }),\n      action: React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 316\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: () => {\n          this.go('panel3');\n        },\n        size: \"xl\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 317\n        },\n        __self: this\n      }, \"\\u0414\\u0430\"), React.createElement(Button, {\n        onClick: () => {\n          this.go('panel4');\n        },\n        style: {\n          marginTop: '12px'\n        },\n        mode: \"secondary\",\n        size: \"xl\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 318\n        },\n        __self: this\n      }, \"\\u041D\\u0435\\u0442\")),\n      stretched: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306\n      },\n      __self: this\n    }, \"\\u0423 \\u0442\\u0435\\u0431\\u044F \\u043A\\u043E\\u0433\\u0434\\u0430-\\u043D\\u0438\\u0431\\u0443\\u0434\\u044C \\u0431\\u044B\\u043B\\u0438 \\u043E\\u0442\\u043D\\u043E\\u0448\\u0435\\u043D\\u0438\\u044F?\")), React.createElement(Panel, {\n      id: \"panel3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 325\n      },\n      __self: this\n    }, React.createElement(Placeholder, {\n      icon: React.createElement(Lottie, {\n        style: {\n          pointerEvents: 'none'\n        },\n        options: {\n          animationData: animDataBrokenHeart,\n          rendererSettings: {\n            preserveAspectRatio: 'xMidYMid slice'\n          }\n        },\n        width: this.viewportToPixels('65vw'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 328\n        },\n        __self: this\n      }),\n      action: React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 336\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: () => {\n          this.go('panel4');\n        },\n        size: \"xl\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 337\n        },\n        __self: this\n      }, \"\\u0412 \\u044D\\u0442\\u043E\\u043C \\u043C\\u0435\\u0441\\u044F\\u0446\\u0435\"), React.createElement(Button, {\n        onClick: () => {\n          this.go('panel4');\n        },\n        style: {\n          marginTop: '12px'\n        },\n        mode: \"secondary\",\n        size: \"xl\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 338\n        },\n        __self: this\n      }, \"\\u0411\\u043E\\u043B\\u044C\\u0448\\u0435 \\u043C\\u0435\\u0441\\u044F\\u0446\\u0430 \\u043D\\u0430\\u0437\\u0430\\u0434\")),\n      stretched: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 326\n      },\n      __self: this\n    }, \"\\u041A\\u043E\\u0433\\u0434\\u0430 \\u0437\\u0430\\u043A\\u043E\\u043D\\u0447\\u0438\\u043B\\u0438\\u0441\\u044C \\u043F\\u043E\\u0441\\u043B\\u0435\\u0434\\u043D\\u0438\\u0435 \\u043E\\u0442\\u043D\\u043E\\u0448\\u0435\\u043D\\u0438\\u044F?\")), React.createElement(Panel, {\n      id: \"panel4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 345\n      },\n      __self: this\n    }, React.createElement(Placeholder, {\n      action: React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 347\n        },\n        __self: this\n      }, this.state.data['gen' + prefix] === 'm' ? React.createElement(Gallery, {\n        slideWidth: \"80%\",\n        align: \"center\",\n        style: {\n          height: 'auto',\n          maxHeight: '70vh'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 350\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        style: {\n          margin: '12px'\n        },\n        src: w1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 355\n        },\n        __self: this\n      }), React.createElement(\"img\", {\n        style: {\n          margin: '12px'\n        },\n        src: w2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 356\n        },\n        __self: this\n      }), React.createElement(\"img\", {\n        style: {\n          margin: '12px'\n        },\n        src: w3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 357\n        },\n        __self: this\n      })) : React.createElement(Gallery, {\n        slideWidth: \"80%\",\n        align: \"center\",\n        style: {\n          height: 'auto',\n          maxHeight: '70vh'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 360\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        style: {\n          margin: '12px'\n        },\n        src: m1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 365\n        },\n        __self: this\n      }), React.createElement(\"img\", {\n        style: {\n          margin: '12px'\n        },\n        src: m2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 366\n        },\n        __self: this\n      }), React.createElement(\"img\", {\n        style: {\n          margin: '12px'\n        },\n        src: m3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 367\n        },\n        __self: this\n      })), React.createElement(Button, {\n        onClick: async () => {\n          try {\n            await bridge.sendPromise('VKWebAppAllowMessagesFromGroup', {\n              group_id,\n              key: 'dBuBKe1kFcdemzB'\n            });\n            await this.randomPhrase();\n            this.go('panel5');\n          } catch (e) {\n            console.error(e);\n            this.setState({\n              snackbar: React.createElement(Snackbar, {\n                layout: \"vertical\",\n                onClose: () => this.setState({\n                  snackbar: null\n                }),\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 378\n                },\n                __self: this\n              }, \"\\u041D\\u0435\\u043E\\u0431\\u0445\\u043E\\u0434\\u0438\\u043C\\u043E \\u0441\\u043D\\u0430\\u0447\\u0430\\u043B\\u0430 \\u0440\\u0430\\u0437\\u0440\\u0435\\u0448\\u0438\\u0442\\u044C \\u0441\\u043E\\u043E\\u0431\\u0449\\u0435\\u043D\\u0438\\u044F\")\n            });\n          }\n        },\n        style: {\n          marginTop: '12px'\n        },\n        size: \"xl\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 370\n        },\n        __self: this\n      }, \"\\u0412\\u044B\\u0431\\u0440\\u0430\\u0442\\u044C\")),\n      stretched: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 346\n      },\n      __self: this\n    }, \"\\u041A\\u0430\\u043A\\u0443\\u044E \\u0438\\u0437 \\u044D\\u0442\\u0438\\u0445 \\u043A\\u0430\\u0440\\u0442\\u0438\\u043D\\u043E\\u043A \\u0442\\u044B \\u0432\\u044B\\u0431\\u0435\\u0440\\u0435\\u0448\\u044C?\"), this.state.snackbar), React.createElement(Panel, {\n      id: \"panel5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 394\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      crossOrigin: \"anonymous\",\n      src: bgDark,\n      style: {\n        height: '100vh'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 395\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: {\n        position: 'absolute',\n        top: '50%',\n        left: '50%',\n        transform: 'translate(-50%, -50%)',\n        width: '100vw',\n        textAlign: 'center'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 396\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      style: {\n        fontSize: '24px',\n        color: 'white',\n        lineHeight: '29px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 397\n      },\n      __self: this\n    }, this.state.data['gen' + prefix] === 'm' ? 'Я поженюсь через:' : 'Я выйду замуж через:'), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 398\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      style: {\n        fontSize: '18px',\n        color: 'white',\n        lineHeight: '23px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 399\n      },\n      __self: this\n    }, this.state.time ? this.state.time : '0 секунд'), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 402\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 402\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"gradient\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 403\n      },\n      __self: this\n    }, this.state.r), React.createElement(Lottie, {\n      style: {\n        pointerEvents: 'none'\n      },\n      options: {\n        animationData: animDataHeart,\n        rendererSettings: {\n          preserveAspectRatio: 'xMidYMid slice'\n        }\n      },\n      width: this.viewportToPixels('60vw'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 404\n      },\n      __self: this\n    }), this.state.screen && React.createElement(Title, {\n      level: 2,\n      weight: \"semibold\",\n      style: {\n        position: 'absolute',\n        top: '75%',\n        left: '50%',\n        transform: 'translate(-50%, 0%)',\n        width: '80vw',\n        textAlign: 'center',\n        color: 'white'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 413\n      },\n      __self: this\n    }, \"\\u041F\\u0435\\u0440\\u0435\\u0445\\u043E\\u0434\\u0438 \\u0432 \\u043F\\u0440\\u0438\\u043B\\u043E\\u0436\\u0435\\u043D\\u0438\\u0435, \\u0435\\u0441\\u043B\\u0438 \\u0445\\u043E\\u0447\\u0435\\u0448\\u044C \\u0443\\u0437\\u043D\\u0430\\u0442\\u044C \\u0434\\u0430\\u0442\\u0443 \\u0441\\u0432\\u043E\\u0435\\u0439 \\u0441\\u0432\\u0430\\u0434\\u044C\\u0431\\u044B\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 415\n      },\n      __self: this\n    }), React.createElement(\"img\", {\n      crossOrigin: 'anonymous',\n      style: {\n        marginTop: '12px'\n      },\n      height: \"26px\",\n      src: downwards_black_arrow,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 416\n      },\n      __self: this\n    }), React.createElement(\"img\", {\n      crossOrigin: 'anonymous',\n      style: {\n        marginLeft: '6px'\n      },\n      height: \"26px\",\n      src: downwards_black_arrow,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 417\n      },\n      __self: this\n    }), React.createElement(\"img\", {\n      crossOrigin: 'anonymous',\n      style: {\n        marginLeft: '6px'\n      },\n      height: \"26px\",\n      src: downwards_black_arrow,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 418\n      },\n      __self: this\n    }))), !this.state.screen && React.createElement(FixedLayout, {\n      vertical: \"bottom\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 425\n      },\n      __self: this\n    }, React.createElement(Div, {\n      style: {\n        marginBottom: '12px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 426\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: async () => {\n        this.setState({\n          popout: React.createElement(ScreenSpinner, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 428\n            },\n            __self: this\n          }),\n          screen: true\n        });\n        await this.sleep(750);\n        let element = document.getElementsByClassName('View__panels')[0];\n        html2canvas(element, {\n          allowTaint: true\n        }).then(async canvas => {\n          this.setState({\n            screen: false\n          });\n          await this.sleep(250);\n          let blob = canvas.toDataURL('image/png');\n\n          try {\n            await bridge.send('VKWebAppShowStoryBox', {\n              background_type: 'image',\n              blob,\n              attachment: {\n                url: 'https://vk.com/app' + app_id,\n                text: 'go_to',\n                type: 'url'\n              }\n            });\n            this.setState({\n              shared: true\n            });\n          } catch (e) {}\n\n          this.setState({\n            popout: null\n          });\n        });\n      },\n      before: React.createElement(Icon28StoryOutline, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 444\n        },\n        __self: this\n      }),\n      size: \"xl\",\n      mode: \"commerce\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 427\n      },\n      __self: this\n    }, \"\\u041F\\u043E\\u0434\\u0435\\u043B\\u0438\\u0442\\u044C\\u0441\\u044F \\u0432 \\u0438\\u0441\\u0442\\u043E\\u0440\\u0438\\u0438\")))));\n  }\n\n}\n\nexport default LoveTest;","map":{"version":3,"sources":["C:/Users/Admin/NodeProjects/LoveTest/src/LoveTest.js"],"names":["React","bridge","html2canvas","Panel","View","Placeholder","Button","Gallery","Title","FixedLayout","Div","Snackbar","ScreenSpinner","Icon28StoryOutline","Lottie","animDataHello","animDataLove","animDataBrokenHeart","animDataHeart","bgLight","bgDark","downwards_black_arrow","w1","w2","w3","m1","m2","m3","random","require","app_id","group_id","prefix","LoveTest","Component","constructor","props","back","state","popout","setState","window","history","pushState","pop","activePanel","length","send","status","data","componentDidMount","bind","go","updateTime","array","split","console","log","updateStorage","randomPhrase","addEventListener","e","preventDefault","subscribe","detail","type","undefined","schemeAttribute","document","createAttribute","value","scheme","body","attributes","setNamedItem","keys","sValues","sendPromise","join","nmbr","Number","key","error","panel","push","woman","man","numM","int","numW","r","toString","timeDate","Date","now","getTime","setInterval","timeMs","years","days","hours","minutes","seconds","yMs","dMs","hMs","minMs","sMs","Math","floor","times","timesText","i","decOfNum","time","number","titles","decCache","decCases","min","max","sleep","ms","Promise","resolve","setTimeout","viewportToPixels","parts","match","q","side","indexOf","render","pointerEvents","transform","animationData","rendererSettings","preserveAspectRatio","marginTop","height","maxHeight","margin","snackbar","position","top","left","width","textAlign","fontSize","color","lineHeight","screen","marginLeft","marginBottom","element","getElementsByClassName","allowTaint","then","canvas","blob","toDataURL","background_type","attachment","url","text","shared"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport bridge from '@vkontakte/vk-bridge';\r\nimport '@vkontakte/vkui/dist/vkui.css';\r\nimport './css/LoveTest.css';\r\n\r\nimport html2canvas from 'html2canvas';\r\n\r\nimport {Panel, View, Placeholder, Button, Gallery, Title, FixedLayout, Div, Snackbar, ScreenSpinner} from '@vkontakte/vkui';\r\n\r\nimport Icon28StoryOutline from '@vkontakte/icons/dist/28/story_outline';\r\n\r\nimport Lottie from 'react-lottie';\r\nimport animDataHello from './animations/hello.json';\r\nimport animDataLove from './animations/love.json';\r\nimport animDataBrokenHeart from './animations/broken_heart.json';\r\nimport animDataHeart from './animations/heart.json';\r\n\r\nimport bgLight from './img/bg-light.jpg';\r\nimport bgDark from './img/bg-dark.jpg';\r\nimport downwards_black_arrow from './img/downwards-black-arrow.png';\r\nimport w1 from './img/w1.jpg';\r\nimport w2 from './img/w2.jpg';\r\nimport w3 from './img/w3.jpg';\r\nimport m1 from './img/m1.jpg';\r\nimport m2 from './img/m2.jpg';\r\nimport m3 from './img/m3.jpg';\r\n\r\nconst random = require('random');\r\n\r\nlet app_id = 7561605,\r\n    group_id = 197766832,\r\n    prefix = '_____';\r\n\r\nclass LoveTest extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            popout: null,\r\n            history: [ 'main' ],\r\n            activePanel: 'main',\r\n            data: {}\r\n        };\r\n\r\n        this.componentDidMount = this.componentDidMount.bind(this);\r\n        this.back = this.back.bind(this);\r\n        this.go = this.go.bind(this);\r\n        this.updateTime = this.updateTime.bind(this);\r\n\r\n        let array = ('Мой парень будет вежливый и милый. Он будет обожать спорт, его тело будет восхищать. Тёмные волосы и голубые глаза сведут меня с ума. Рост 191\\n' +\r\n            'Мой парень будет бизнесменом. Предприимчивый, сильный, но честный, он будет уникальной личностью. У него будет милая улыбка и красивые глаза.\\n' +\r\n            'Мой парень будет статный и красивый. Внешность модели, характер полководца. За ним всегда чувствую себя в безопасности. Рост 187\\n' +\r\n            'Мой парень будет очень успешен и силен. Его карие глаза будут полны мудрости и доброты. Его рост будет 178, хобби - велоспорт.\\n' +\r\n            'Мой парень будет стройными и высоким. Я сразу полюблю его ласковый и надёжный характер. Он обожает делать сюрпризы. Рост 176\\n' +\r\n            'Мой парень будет ревнивым и улыбчивым. Он очень будет дорожить мной. У него будет восхитительный голос и красивое тело. Рост 191\\n' +\r\n            'Мой парень будет очень хорошо танцевать. У него будут светлые волосы и голубые глаза. Его хобби - рисование.\\n' +\r\n            'Мой парень будет высоким и милым. Его звонкий смех будет заразительным, а глаза цвета морской волны покорят мое сердце. Он будет работать программистом в крупной компании.\\n' +\r\n            'Мой парень будет необычным. У него будет много энергии, он будет очень эмоциональным и неусидчивым. Добрый и умный, он будет ростом 182, темноволосый.\\n' +\r\n            'Мой парень будет очень миловидным. Худощавый, но жилистый, с русыми волосами и серыми глазами. Он будет очень чуткий, добрый и верный. Он будет любить собачек.\\n' +\r\n            'Мой парень будет ветеринаром. Он будет обожать кошек и вообще всех животных. Сильный, добрый, бесстрашный, темноволосый с зелеными глазами.\\n' +\r\n            'Мой парень будет успешным банковским служащим, строгим, но справедливым. Я буду без ума от его чувства юмора и бездонных зеленых глаз. У него будет рост 181 и атлетическое тело.\\n' +\r\n            'Мой парень на первый взгляд будет внешне самым обыкновенным, рост 175, спортивное телосложение. Но на деле он будет работать пожарным, волонтером в детских домах и будет любить меня бесконечно сильно.\\n' +\r\n            'Мой парень будет ярым фанатом футбола. Он будет хорош играть в региональной сборной. У него будет волшебное тело и голубые глаза. Он будет называть меня своей \"малышкой\".\\n' +\r\n            'Мой парень будет фотографом. Его волшебные фотографии будут оценены по достоинству в европейских странах. Он будет среднего телосложения с модельным лицом и глазами изумрудного цвета.\\n' +\r\n            'Мой парень будет красивым, накаченным массажистом. Его крепкие руки будут делать со мной такое, от чего я буду таять, как масло. У него будут русые волосы, умные карие глаза и бархатистый голос.\\n' +\r\n            'Мой парень будет ебать овец и говорить фразу \"ежи бля\" каждый день.\\n' +\r\n            'Мой парень будет великолепным хирургом. Он будет добрым и нежным. У него будет широкая спина, за которой я буду чувствовать себя в безопасности. У него красивые голубые глаза и рост 185.\\n' +\r\n            'Мой парень будет очень строгим, но добрым и милым одновременно. Он будет любить меня больше, чем я себе могла представить. Он будет работать фитнес инструктором. Его статная внешность и карие глаза сведут меня с ума.\\n' +\r\n            'Мой парень будет пилотом самолета. Его будут любить и уважать все вокруг. Незабываемые вечера в его крепких объятиях я не забуду никогда. У него будет волшебное чувство юмора и голубые, бездонные глаза.\\n' +\r\n            'Мой парень будет очень вспыльчивым и с сильным характером, но тем не менее от меня он будет без ума. С ним у меня будут лучшие свидания. У него будут светлые волосы и изумрудные глаза.\\n' +\r\n            'Мой парень будет учителем в школе. У него будет восхитительный смех и харизма, рост 180 и модельная внешность. Он не любит расставания, потому я всегда буду рядом.\\n' +\r\n            'Мой парень будет высоким, стройным и с зелеными глазами. Его русые волосы будут очень пышными и красивыми. Он инструктор по вождению, который любит экстрим.\\n' +\r\n            'Мой парень будет моделью. Он будет сниматься для линеек одежды и рекламных компаний. Он очень добрый и милый. Любит спать в обнимку со мной. Рост 184 и крепкое тело.').split('\\n');\r\n        console.log(array);\r\n    }\r\n\r\n    async componentDidMount () {\r\n        let data = await this.updateStorage();\r\n\r\n        if(data['gen' + prefix] !== false && data['phrase' + prefix] !== false) {\r\n            await this.randomPhrase();\r\n            this.go('panel5');\r\n        }\r\n\r\n        bridge.send('VKWebAppInit');\r\n\r\n        window.addEventListener('popstate', e => {\r\n            e.preventDefault();\r\n            this.back(e);\r\n        });\r\n\r\n        bridge.subscribe(async ({ detail: { type, data }}) => {\r\n            if (type !== undefined) console.log(type, data);\r\n            if (type === 'VKWebAppUpdateConfig') {\r\n                const schemeAttribute = document.createAttribute('scheme');\r\n                schemeAttribute.value = false ? data.scheme ? data.scheme : 'bright_light' : 'space_gray';\r\n                document.body.attributes.setNamedItem(schemeAttribute);\r\n            }\r\n        });\r\n    }\r\n\r\n    async updateStorage () {\r\n        let keys = ['gen', 'phrase', 'time'];\r\n        let sValues = await bridge.sendPromise('VKWebAppStorageGet', {keys: (keys.join(prefix+',') + prefix).split(',') });\r\n        sValues = sValues.keys;\r\n        let data = {};\r\n        try{\r\n            for(let value of sValues){\r\n                let nmbr = Number(value.value);\r\n                data[value.key] = (value.value == 'true' || value.value == 'false' || value.value == '') ? value.value == 'true' : nmbr > 0 ? nmbr : value.value;\r\n            }\r\n        }catch (e) {\r\n            console.error('e3', e)\r\n        }\r\n        this.setState({ data, sValues });\r\n\r\n        return data;\r\n    }\r\n\r\n    back = () => {\r\n        if(this.state.popout !== null){\r\n            this.setState({ popout: null });\r\n            window.history.pushState({ pop: 'popout' }, 'Title');\r\n            return ;\r\n        }\r\n        let { activePanel, history } = this.state;\r\n        if(history.length === 1) {\r\n            bridge.send('VKWebAppClose', { status: 'success' });\r\n        } else if (history.length > 1) {\r\n            history.pop();\r\n            activePanel = history[history.length - 1];\r\n            this.setState({ activePanel, history });\r\n        }\r\n    };\r\n    go(panel) {\r\n        let { history, activePanel } = this.state;\r\n        if(history[history.length-1] !== panel) {\r\n            history.push(panel);\r\n            window.history.pushState({ activePanel: panel }, 'Title');\r\n            activePanel = panel;\r\n            this.setState({ activePanel, history });\r\n        }\r\n    }\r\n\r\n    async randomPhrase () {\r\n        let woman = [\r\n                'Мой парень будет вежливый и милый. Он будет обожать спорт, его тело будет восхищать. Тёмные волосы и голубые глаза сведут меня с ума. Рост 191',\r\n                'Мой парень будет бизнесменом. Предприимчивый, сильный, но честный, он будет уникальной личностью. У него будет милая улыбка и красивые глаза.',\r\n                'Мой парень будет статный и красивый. Внешность модели, характер полководца. За ним всегда чувствую себя в безопасности. Рост 187',\r\n                'Мой парень будет очень успешен и силен. Его карие глаза будут полны мудрости и доброты. Его рост будет 178, хобби - велоспорт.',\r\n                'Мой парень будет стройными и высоким. Я сразу полюблю его ласковый и надёжный характер. Он обожает делать сюрпризы. Рост 176',\r\n                'Мой парень будет ревнивым и улыбчивым. Он очень будет дорожить мной. У него будет восхитительный голос и красивое тело. Рост 191',\r\n                'Мой парень будет очень хорошо танцевать. У него будут светлые волосы и голубые глаза. Его хобби - рисование.',\r\n                'Мой парень будет высоким и милым. Его звонкий смех будет заразительным, а глаза цвета морской волны покорят мое сердце. Он будет работать программистом в крупной компании.',\r\n                'Мой парень будет необычным. У него будет много энергии, он будет очень эмоциональным и неусидчивым. Добрый и умный, он будет ростом 182, темноволосый.',\r\n                'Мой парень будет очень миловидным. Худощавый, но жилистый, с русыми волосами и серыми глазами. Он будет очень чуткий, добрый и верный. Он будет любить собачек.',\r\n                'Мой парень будет ветеринаром. Он будет обожать кошек и вообще всех животных. Сильный, добрый, бесстрашный, темноволосый с зелеными глазами.',\r\n                'Мой парень будет успешным банковским служащим, строгим, но справедливым. Я буду без ума от его чувства юмора и бездонных зеленых глаз. У него будет рост 181 и атлетическое тело.',\r\n                'Мой парень на первый взгляд будет внешне самым обыкновенным, рост 175, спортивное телосложение. Но на деле он будет работать пожарным, волонтером в детских домах и будет любить меня бесконечно сильно.',\r\n                'Мой парень будет ярым фанатом футбола. Он будет хорош играть в региональной сборной. У него будет волшебное тело и голубые глаза. Он будет называть меня своей \"малышкой\".',\r\n                'Мой парень будет фотографом. Его волшебные фотографии будут оцене��ы по достоинству в европейских странах. Он будет среднего телосложения с модельным лицом и глазами изумрудного цвета.',\r\n                'Мой парень будет красивым, накаченным массажистом. Его крепкие руки будут делать со мной такое, от чего я буду таять, как масло. У него будут русые волосы, умные карие глаза и бархатистый голос.',\r\n                'Мой парень будет ебать овец и говорить фразу \"ежи бля\" каждый день.',\r\n                'Мой парень будет великолепным хирургом. Он будет добрым и нежным. У него будет широкая спина, за которой я буду чувствовать себя в безопасности. У него красивые голубые глаза и рост 185.',\r\n                'Мой парень будет очень строгим, но добрым и милым одновременно. Он будет любить меня больше, чем я себе могла представить. Он будет работать фитнес инструктором. Его статная внешность и карие глаза сведут меня с ума.',\r\n                'Мой парень будет пилотом самолета. Его будут любить и уважать все вокруг. Незабываемые вечера в его крепких объятиях я не забуду никогда. У него будет волшебное чувство юмора и голубые, бездонные глаза.',\r\n                'Мой парень будет очень вспыльчивым и с сильным характером, но тем не менее от меня он будет без ума. С ним у меня будут лучшие свидания. У него будут светлые волосы и изумрудные глаза.',\r\n                'Мой парень будет учителем в школе. У него будет восхитительный смех и харизма, рост 180 и модельная внешность. Он не любит расставания, потому я всегда буду рядом.',\r\n                'Мой парень будет высоким, стройным и с зелеными глазами. Его русые волосы будут очень пышными и красивыми. Он инструктор по вождению, который любит экстрим.',\r\n                'Мой парень будет моделью. Он будет сниматься для линеек одежды и рекламных компаний. Он очень добрый и милый. Любит спать в обнимку со мной. Рост 184 и крепкое тело.'\r\n            ],\r\n            man = [\r\n                'Следующие отношения начнутся 14 сентября 2020 года. Ты будешь ожидать автобус и увидишь свою будущую девушку. После неловких взглядов вы зайдете в автобус, случайно сев рядом, познакомитесь и разговоритесь.',\r\n                'Следующие отношения начнутся 28 декабря 2020 года. Ты пойдешь в магазин под новый год, подскользнешься на наледи и упадешь. Твоя будущая половинка подбежит помочь тебе подняться. Посмеявшись и отряхнувшись, вы узнаете имена друг друга. Она будет очень милой и красивой.',\r\n                'Следующие отношения начнутся 11 мая 2021 года. Ранним утром ты отправишься по делам. Вы не первый раз столкнетесь в лифте, но сегодня твоя будущая девушка наберется храбрости и напрямую спросит: \"не хочешь ли ты погулять вечером?\". Ты ответишь \"да\".',\r\n                'Следующие отношения начнутся 28 апреля 2021 года. На протяжении нескольких месяцев вы будете сталкиваться взглядами в метро. В очередной раз ты не выдержишь и подойдешь познакомиться. \"Не может так быть, что бы мы случайно столько раз встретились\" - скажешь ты и вы договоритесь о свидании.',\r\n                'Следующие отношения начнутся 22 октября 2020 года. Ты будешь в плохом настроении в перерыве между учебой, но вдруг увидишь ее. Она будет стоять и изучать что-то на доске с информацией. Ты аккуратно подойдешь и пошутишь. Тебя заворожит ее звонкий смех. С этого дня вы начнете строить отношения.',\r\n                'Следующие отношения начнутся 18 ноября 2020 года. Ты не будешь знать как ее зовут, но она позвонит тебе и ты влюбишься в ее голос. Окажется, что она просто ошиблась номером, но ты найдешь ее в соц.сети по номеру телефона и вы начнете общаться.',\r\n                'Следующие отношения начнутся 12 февраля 2021 года. Ты не будешь ждать, что в такой пасмурный день может случиться что-то хорошее, но тут появится она. Ты столкнешься с ней около магазина и помимо своей воли увяжешься за ней. Она заметит, что ты идешь следом и повернется поздороваться. Окажется, что вы учились в параллельном классе.',\r\n                'Следующие отношения начнутся 27 сентября 2020 года. Это будет девушка из компании твоего друга. Вы познакомитесь на вечеринке. Она будет такой беззащитной и милой, что ты не сможешь не влюбиться. Через неделю вы пойдете на ваше первое свидание.',\r\n                'Следующие отношения начнутся 4 апреля 2021 года. Вы познакомитесь во время вечерней прогулки с друзьями. Встретившись с компанией девушек, твои друзья быстро найдут с ними общий язык, а ты будешь плестись сзади. Одна из девушек заметит это и присоединится к тебе. Ты узнаешь ее имя и полюбишь ее чудный голос. В этот день будет ваш первый поцелуй',\r\n                'Следующие отношения начнутся 12 февраля 2021 года. Голодный, ты зайдешь в кафе быстрого питания. Твоя будущая девушка будет стоять в соседней очереди. У нее будет волшебная фигура. Позже ты подсядешь к ней за столик и узнаешь, что она обожает бургеры и что \"у меня просто хороший обмен веществ\". Вы весело проведете время и уже через неделю начнете встречаться.',\r\n                'Следующие отношения начнутся 9 ноября 2020 года. Ты не первый месяц испытываешь симпатию к этой девушке, но все как-то не складывалось общение. В этот день вы случайно столкнетесь на светофоре. Ты проводишь ее до дома и предложишь встретиться еще раз. Она согласится и поцелует тебя в щечку.',\r\n                'Следующие отношения начнутся 3 декабря 2020 года. Она подойдет неожиданно и спросит, как пройти к какому-то дому. Ты застесняешься, но быстро посмотришь по картам в телефоне и попытаешься объяснить, как туда дойти. Видя, что она запуталась, ты решишь проводить ее. В конце пути ты возьмешь ее номер и уже на следующий день вы пойдете на свидание.',\r\n                'Следующие отношения начнутся 23 октября 2020 года. Тебя познакомит с ней твоя подруга. Окажется, что вы учились с ней в начальных классах. В этот же день будет ваш первый поцелуй.',\r\n                'Следующие отношения начнутся 29 декабря 2020 года. Под новый год случаются чудеса, ведь ты познакомишься с ней. С первого взгляда ты поймешь, что она та самая. Она будет двоюродной сестрой твоего одноклассника. Вы быстро найдете общий язык и договоритесь на свидание.',\r\n                'Следующие отношения начнутся 6 мая 2021 года. После неудачных отношений ты будешь отдыхать с друзьями, тусить и развлекаться. Ее пригласит один из твоих друзей. Странно, но она сама подойдет к тебе и познакомится. Тебя подкупит ее смелость и уже через пару дней вы начнете встречаться.',\r\n                'Следующие отношения начнутся 17 ноября 2020 года. Ты неожиданно поймешь, что тебе нравится твоя давняя знакомая. Вы всегда проводили много времени вместе, но ты не думал о ней, как о будущей девушке. Тогда ты решил пригласить ее на свидание, на что она с радостью согласилась. Через пару дней вы впервые поцелуетесь.'\r\n            ];\r\n\r\n        let numM = random.int(0, man.length-1),\r\n            numW = random.int(0, woman.length-1);\r\n\r\n        let r = this.state.data['gen' + prefix] === 'm' ?\r\n            this.state.data['phrase' + prefix] !== false ? man[this.state.data['phrase' + prefix]] : man[numM]\r\n            :\r\n            this.state.data['phrase' + prefix] !== false ? woman[this.state.data['phrase' + prefix]] : woman[numW];\r\n\r\n        if(this.state.data['phrase' + prefix] === false){\r\n            await bridge.sendPromise('VKWebAppStorageSet', {key: 'phrase' + prefix, value: this.state.data['gen' + prefix] === 'm' ? numM.toString() : numW.toString()});\r\n        }\r\n\r\n        let timeDate = this.state.data['time' + prefix] !== false ? this.state.data['time' + prefix] : await new Date(Date.now() + this.random(6 * 365 * 24 * 60 * 60 * 1000, 12 * 365 * 24 * 60 * 60 * 1000)).getTime();\r\n\r\n        if(this.state.data['phrase' + prefix] === false){\r\n            await bridge.sendPromise('VKWebAppStorageSet', {key: 'time' + prefix, value: timeDate.toString()});\r\n        }\r\n\r\n        this.setState({ r, timeDate });\r\n\r\n        await this.updateStorage();\r\n\r\n        this.updateTime();\r\n    }\r\n\r\n    updateTime() {\r\n        setInterval(()=>{\r\n            try{\r\n                let timeMs = this.state.timeDate - Date.now();\r\n\r\n                let years, days, hours, minutes, seconds;\r\n                let yMs = 1000 * 60 * 60 * 24 * 365,\r\n                    dMs = yMs / 365,\r\n                    hMs = dMs / 24,\r\n                    minMs = hMs / 60,\r\n                    sMs = minMs / 60;\r\n\r\n                years = Math.floor(timeMs / yMs); timeMs -= yMs;\r\n                days = Math.floor(timeMs / dMs) % 365; timeMs -= dMs;\r\n                hours = Math.floor(timeMs / hMs) % 24; timeMs -= hMs;\r\n                minutes = Math.floor(timeMs / minMs) % 60; timeMs -= minMs;\r\n                seconds = Math.floor(timeMs / sMs) % 60; timeMs -= sMs;\r\n\r\n                let times = [ [ years, [ 'год', 'года', 'лет' ] ],\r\n                        [ days, ['день', 'дня', 'дней'] ],\r\n                        [ hours, ['час', 'часа', 'часов'] ],\r\n                        [ minutes, ['минута', 'минуты', 'минут'] ],\r\n                        [ seconds, ['секунда', 'секунды', 'секунд'] ]],\r\n\r\n                    timesText = [];\r\n\r\n                for(let i = 0; i < times.length; i++){\r\n                    if (times[i][0] > 0) timesText.push(times[i][0] + ' ' + this.decOfNum(times[i][0], times[i][1]));\r\n                }\r\n\r\n                this.setState({ time: timesText.join(', ') });\r\n            }catch (e) {\r\n                console.error(e);\r\n            }\r\n        }, 500);\r\n    }\r\n\r\n    decOfNum(number, titles){\r\n        let decCache = [],\r\n            decCases = [2, 0, 1, 1, 1, 2];\r\n        if(!decCache[number]) decCache[number] = number % 100 > 4 && number % 100 < 20 ? 2 : decCases[Math.min(number % 10, 5)];\r\n        return titles[decCache[number]];\r\n    }\r\n\r\n    random(min, max) {\r\n        return Math.floor(Math.random() * (max - min) + min);\r\n    }\r\n\r\n    sleep(ms) {\r\n        return new Promise(resolve => setTimeout(resolve, ms));\r\n    }\r\n\r\n    viewportToPixels(value) {\r\n        let parts = value.match(/([0-9\\.]+)(vh|vw)/);\r\n        let q = Number(parts[1])\r\n        let side = window[['innerHeight', 'innerWidth'][['vh', 'vw'].indexOf(parts[2])]];\r\n        return side * (q/100)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <View activePanel={this.state.activePanel} popout={this.state.popout} history={this.state.history} onSwipeBack={this.back}>\r\n                <Panel id='main'>\r\n                    <Placeholder\r\n                        icon={\r\n                            <Lottie style={{ pointerEvents: 'none', transform: 'translateX(20px)' }} options={{\r\n                                animationData: animDataHello,\r\n                                rendererSettings: {\r\n                                    preserveAspectRatio: 'xMidYMid slice'\r\n                                }\r\n                            }} width={this.viewportToPixels('65vw')}\r\n                            />\r\n                        }\r\n                        action={<div>\r\n                            <Button onClick={async ()=>{\r\n                                await bridge.sendPromise('VKWebAppStorageSet', {key: 'gen' + prefix, value: 'm'});\r\n                                await this.updateStorage();\r\n                                this.go('panel2'); }} size='xl'>Мужской</Button>\r\n                            <Button onClick={async()=>{\r\n                                await bridge.sendPromise('VKWebAppStorageSet', {key: 'gen' + prefix, value: 'w'});\r\n                                await this.updateStorage();\r\n                                this.go('panel2'); }} style={{ marginTop: '12px' }} mode='secondary' size='xl'>Женский</Button>\r\n                        </div>}\r\n                        stretched\r\n                    >\r\n                        Привет! Давай определимся с полом:\r\n                    </Placeholder>\r\n                </Panel>\r\n                <Panel id='panel2'>\r\n                    <Placeholder\r\n                        icon={\r\n                            <Lottie style={{ pointerEvents: 'none' }} options={{\r\n                                animationData: animDataLove,\r\n                                rendererSettings: {\r\n                                    preserveAspectRatio: 'xMidYMid slice'\r\n                                }\r\n                            }} width={this.viewportToPixels('65vw')}\r\n                            />\r\n                        }\r\n                        action={<div>\r\n                            <Button onClick={()=>{ this.go('panel3') }} size='xl'>Да</Button>\r\n                            <Button onClick={()=>{ this.go('panel4') }} style={{ marginTop: '12px' }} mode='secondary' size='xl'>Нет</Button>\r\n                        </div>}\r\n                        stretched\r\n                    >\r\n                        У тебя когда-нибудь были отношения?\r\n                    </Placeholder>\r\n                </Panel>\r\n                <Panel id='panel3'>\r\n                    <Placeholder\r\n                        icon={\r\n                            <Lottie style={{ pointerEvents: 'none' }} options={{\r\n                                animationData: animDataBrokenHeart,\r\n                                rendererSettings: {\r\n                                    preserveAspectRatio: 'xMidYMid slice'\r\n                                }\r\n                            }} width={this.viewportToPixels('65vw')}\r\n                            />\r\n                        }\r\n                        action={<div>\r\n                            <Button onClick={()=>{ this.go('panel4') }} size='xl'>В этом месяце</Button>\r\n                            <Button onClick={()=>{ this.go('panel4') }} style={{ marginTop: '12px' }} mode='secondary' size='xl'>Больше месяца назад</Button>\r\n                        </div>}\r\n                        stretched\r\n                    >\r\n                        Когда закончились последние отношения?\r\n                    </Placeholder>\r\n                </Panel>\r\n                <Panel id='panel4'>\r\n                    <Placeholder\r\n                        action={<div>\r\n                            {\r\n                                this.state.data['gen' + prefix] === 'm' ?\r\n                                    <Gallery\r\n                                        slideWidth='80%'\r\n                                        align='center'\r\n                                        style={{ height: 'auto', maxHeight: '70vh' }}\r\n                                    >\r\n                                        <img style={{ margin: '12px' }} src={w1} />\r\n                                        <img style={{ margin: '12px' }} src={w2} />\r\n                                        <img style={{ margin: '12px' }} src={w3} />\r\n                                    </Gallery>\r\n                                    :\r\n                                    <Gallery\r\n                                        slideWidth='80%'\r\n                                        align='center'\r\n                                        style={{ height: 'auto', maxHeight: '70vh' }}\r\n                                    >\r\n                                        <img style={{ margin: '12px' }} src={m1} />\r\n                                        <img style={{ margin: '12px' }} src={m2} />\r\n                                        <img style={{ margin: '12px' }} src={m3} />\r\n                                    </Gallery>\r\n                            }\r\n                            <Button onClick={async ()=>{ \r\n                                try{\r\n                                    await bridge.sendPromise('VKWebAppAllowMessagesFromGroup', {group_id, key: 'dBuBKe1kFcdemzB'});\r\n                                    await this.randomPhrase();\r\n                                    this.go('panel5');\r\n                                }catch (e) {\r\n                                    console.error(e);\r\n                                    this.setState({ snackbar:\r\n                                            <Snackbar\r\n                                                layout='vertical'\r\n                                                onClose={() => this.setState({ snackbar: null })}\r\n                                            >\r\n                                                Необходимо сначала разрешить сообщения\r\n                                            </Snackbar>\r\n                                    });\r\n                                }\r\n                            }} style={{ marginTop: '12px' }} size='xl'>Выбрать</Button>\r\n                        </div>}\r\n                        stretched\r\n                    >\r\n                        Какую из этих картинок ты выберешь?\r\n                    </Placeholder>\r\n                    { this.state.snackbar }\r\n                </Panel>\r\n                <Panel id='panel5'>\r\n                    <img crossOrigin='anonymous' src={bgDark} style={{ height: '100vh' }}/>\r\n                    <div style={{ position: 'absolute', top: '50%', left: '50%', transform: 'translate(-50%, -50%)', width: '100vw', textAlign: 'center' }}>\r\n                        <span style={{ fontSize: '24px', color: 'white', lineHeight: '29px' }}>{ this.state.data['gen' + prefix] === 'm' ? 'Я поженюсь через:' : 'Я выйду замуж через:' }</span>\r\n                        <br/>\r\n                        <span style={{ fontSize: '18px', color: 'white', lineHeight: '23px' }}>\r\n                            {this.state.time ? this.state.time : '0 секунд'}\r\n                        </span>\r\n                        <br/><br/>\r\n                        <div className='gradient'>{ this.state.r }</div>\r\n                        <Lottie style={{ pointerEvents: 'none' }} options={{\r\n                            animationData: animDataHeart,\r\n                            rendererSettings: {\r\n                                preserveAspectRatio: 'xMidYMid slice'\r\n                            }\r\n                        }} width={this.viewportToPixels('60vw')}\r\n                        />\r\n                        {\r\n                            this.state.screen &&\r\n                            <Title level={2} weight='semibold' style={{ position: 'absolute', top: '75%', left: '50%', transform: 'translate(-50%, 0%)', width: '80vw', textAlign: 'center', color: 'white' }}>\r\n                                Переходи в приложение, если хочешь узнать дату своей свадьбы\r\n                                <br/>\r\n                                <img crossOrigin={'anonymous'} style={{ marginTop: '12px' }} height='26px' src={downwards_black_arrow}/>\r\n                                <img crossOrigin={'anonymous'} style={{ marginLeft: '6px' }} height='26px' src={downwards_black_arrow}/>\r\n                                <img crossOrigin={'anonymous'} style={{ marginLeft: '6px' }} height='26px' src={downwards_black_arrow}/>\r\n                            </Title>\r\n                        }\r\n                    </div>\r\n\r\n                    {\r\n                        !this.state.screen &&\r\n                        <FixedLayout vertical='bottom'>\r\n                            <Div style={{ marginBottom: '12px' }}>\r\n                                <Button onClick={async ()=>{\r\n                                    this.setState({ popout: <ScreenSpinner/>, screen: true });\r\n                                    await this.sleep(750);\r\n                                    let element = document.getElementsByClassName('View__panels')[0];\r\n                                    html2canvas(element, { allowTaint: true }).then(async canvas => {\r\n                                        this.setState({ screen: false });\r\n                                        await this.sleep(250);\r\n                                        let blob = canvas.toDataURL('image/png');\r\n\r\n                                        try{\r\n                                            await bridge.send('VKWebAppShowStoryBox', {\r\n                                                background_type: 'image', blob, attachment: { url: 'https://vk.com/app' + app_id, text: 'go_to', type: 'url' }\r\n                                            });\r\n                                            this.setState({ shared: true });\r\n                                        }catch (e) {}\r\n                                        this.setState({ popout: null });\r\n                                    });\r\n                                }} before={<Icon28StoryOutline />} size='xl' mode='commerce'>Поделиться в истории</Button>\r\n                            </Div>\r\n                        </FixedLayout>\r\n                    }\r\n                </Panel>\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\nexport default LoveTest;"]},"metadata":{},"sourceType":"module"}