{"version":3,"sources":["../../../src/components/MiniInfoCell/MiniInfoCell.tsx"],"names":["MiniInfoCell","props","platform","before","after","mode","multiline","children","className","restProps","Component","onClick","Tappable","defaultProps"],"mappings":";;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AA4BO,IAAMA,YAAmC,GAAG,SAAtCA,YAAsC,CAACC,KAAD,EAAW;AAAA;;AAC5D,MAAMC,QAAQ,GAAG,2BAAjB;AAD4D,MAEpDC,MAFoD,GAEkBF,KAFlB,CAEpDE,MAFoD;AAAA,MAE5CC,KAF4C,GAEkBH,KAFlB,CAE5CG,KAF4C;AAAA,MAErCC,IAFqC,GAEkBJ,KAFlB,CAErCI,IAFqC;AAAA,MAE/BC,SAF+B,GAEkBL,KAFlB,CAE/BK,SAF+B;AAAA,MAEpBC,QAFoB,GAEkBN,KAFlB,CAEpBM,QAFoB;AAAA,MAEVC,SAFU,GAEkBP,KAFlB,CAEVO,SAFU;AAAA,MAEIC,SAFJ,0CAEkBR,KAFlB;AAI5D,MAAMS,SAAsB,GAAGD,SAAS,CAACE,OAAV,GAAoBC,iBAApB,GAA+B,KAA9D;AAEA,sBACE,6BAAC,SAAD,6BACMH,SADN;AAEE,IAAA,SAAS,EAAE,0BAAW,2BAAa,cAAb,EAA6BP,QAA7B,CAAX,2FACYG,IADZ,GACqBA,IAAI,KAAK,MAD9B,8CAET,oBAFS,EAEaC,SAFb,iBAGRE,SAHQ;AAFb,mBAOE;AAAK,IAAA,SAAS,EAAC;AAAf,KACGL,MADH,CAPF,eAUE,6BAAC,aAAD;AACE,IAAA,SAAS,EAAC,uBADZ;AAEE,IAAA,MAAM,EAAEE,IAAI,KAAK,MAAT,GAAkB,QAAlB,GAA6B;AAFvC,KAIGE,QAJH,CAVF,EAgBG,yBAAaH,KAAb,kBACD;AAAK,IAAA,SAAS,EAAC;AAAf,KACGA,KADH,CAjBF,CADF;AAwBD,CA9BM;;;AAgCPJ,YAAY,CAACa,YAAb,GAA4B;AAC1BR,EAAAA,IAAI,EAAE;AADoB,CAA5B","sourcesContent":["import React, { ElementType, FC, HTMLAttributes, ReactNode } from 'react';\nimport classNames from '../../lib/classNames';\nimport usePlatform from '../../hooks/usePlatform';\nimport getClassName from '../../helpers/getClassName';\nimport Text from '../Typography/Text/Text';\nimport Tappable from '../../components/Tappable/Tappable';\nimport { hasReactNode } from '../../lib/utils';\n\nexport interface MiniInfoCellProps extends HTMLAttributes<HTMLDivElement> {\n  /**\n   * Иконка слева.<br />\n   * Рекомендуется использовать иконки размера 20.\n   */\n  before: ReactNode;\n\n  /**\n   * Содержимое справа.<br />\n   * `<UsersStack size=\"s\" />` или `<Avatar size={24} />`\n   */\n  after?: ReactNode;\n\n  multiline?: boolean;\n\n  /**\n   * Тип ячейки.\n   *\n   * - `base` – базовая ячейка с серой иконкой и серым текстом.<br />\n   * В компонент можно передать `Link`, чтобы визуально сделать часть текста ссылкой.\n   * - `add` – тип ячейки, который показывает, что взаимодействие с ней должно вызывать действие добавления чего-то.\n   * - `more` – взаимодействие с такой ячейкой должно открывать какую-то подробную информацию.\n   */\n  mode?: 'base' | 'add' | 'more';\n}\n\nexport const MiniInfoCell: FC<MiniInfoCellProps> = (props) => {\n  const platform = usePlatform();\n  const { before, after, mode, multiline, children, className, ...restProps } = props;\n\n  const Component: ElementType = restProps.onClick ? Tappable : 'div';\n\n  return (\n    <Component\n      {...restProps}\n      className={classNames(getClassName('MiniInfoCell', platform), {\n        [`MiniInfoCell--md-${mode}`]: mode !== 'base',\n        'MiniInfoCell--mult': multiline,\n      }, className)}\n    >\n      <div className=\"MiniInfoCell__icon\">\n        {before}\n      </div>\n      <Text\n        className=\"MiniInfoCell__content\"\n        weight={mode === 'more' ? 'medium' : 'regular'}\n      >\n        {children}\n      </Text>\n      {hasReactNode(after) &&\n      <div className=\"MiniInfoCell__after\">\n        {after}\n      </div>\n      }\n    </Component>\n  );\n};\n\nMiniInfoCell.defaultProps = {\n  mode: 'base',\n};\n"],"file":"MiniInfoCell.js"}